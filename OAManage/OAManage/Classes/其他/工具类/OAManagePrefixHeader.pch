//
//  OAManagePrefixHeader.pch
//  OAManage
//
//  Created by mac on 2018/10/18.
//  Copyright © 2018年 mac. All rights reserved.
//

#define NaviH (SCH >= 780 ? 88 : 64)

// 判断是否是ipad
#define JH_isPad ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPad)
// 判断iPhone4系列
#define iPhone4 ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(640, 960), [[UIScreen mainScreen] currentMode].size) && !JH_isPad : NO)
// 判断iPhone5系列
#define iPhone5 ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(640, 1136), [[UIScreen mainScreen] currentMode].size) && !JH_isPad : NO)
// 判断iPhone6系列
#define iPhone6 ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(750, 1334), [[UIScreen mainScreen] currentMode].size) && !JH_isPad : NO)
//判断iphone6+系列
#define iPhone6p ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(1242, 2208), [[UIScreen mainScreen] currentMode].size) && !JH_isPad : NO)
// 判断iPhoneX
#define iphonex ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(1125, 2436), [[UIScreen mainScreen] currentMode].size) && !JH_isPad : NO)
// 判断iPHoneXr | 11
#define iPhoneXR ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(828, 1792), [[UIScreen mainScreen] currentMode].size) && !JH_isPad : NO)
// 判断iPhoneXs | 11Pro
#define iPhoneXS ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(1125, 2436), [[UIScreen mainScreen] currentMode].size) && !JH_isPad : NO)
// 判断iPhoneXs Max | 11ProMax
#define iPhoneXSMax ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(1242, 2688), [[UIScreen mainScreen] currentMode].size) && !JH_isPad : NO)

//判断iPhone12_Mini
#define iPhone12_Mini ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(1080, 2340), [[UIScreen mainScreen] currentMode].size) && !JH_isPad : NO)

//判断iPhone12 | 12Pro
#define iPhone12 ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(1170, 2532), [[UIScreen mainScreen] currentMode].size) && !JH_isPad : NO)

//判断iPhone12 Pro Max
#define iPhone12_ProMax ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(1284, 2778), [[UIScreen mainScreen] currentMode].size) && !JH_isPad : NO)

//x系列
#define JH_isIPhone_IPhoneX_All (iphonex || iPhoneXR || iPhoneXS || iPhoneXSMax || iPhone12_Mini || iPhone12 || iPhone12_ProMax)
#define Height_NavBar ((iPhoneXR == YES || iPhoneXS == YES || iPhoneXSMax == YES || iPhone12_Mini == YES) ? 88.0 : (iphonex == YES) ? 92 : (iPhone12 == YES || iPhone12_ProMax == YES) ? 91 : 64.0)
#define Height_TabBar ((JH_isIPhone_IPhoneX_All == YES) ? 83.0 : 49.0)

#define Height_bottomSafeArea (JH_isIPhone_IPhoneX_All == YES ? 34.0 : 0.0)

#define SCW [UIScreen mainScreen].bounds.size.width
#define SCH  [UIScreen mainScreen].bounds.size.height
#define KScaleH (SCH/667.0)
#define KScaleW (SCW/375.0)
#define IS_IPHONE (UI_USER_INTERFACE_IDIOM() == UIUserInterfaceIdiomPhone)

#define IS_PAD (UI_USER_INTERFACE_IDIOM()== UIUserInterfaceIdiomPad)


#define DEVICES_IS_PRO_12_9 SCH == 1366

#define SCALE_TO_PRO (DEVICES_IS_PRO_12_9 ? (1366.0/1024.0): 1)



#define navHeight self.navigationController.navigationBar.frame.size.height
#define navY self.navigationController.navigationBar.frame.origin.y

//文字大小适配
#define Textadaptation(a) (NSInteger)a * (SCW / 375.0)
#define RSWeakself __weak typeof(self) weakSelf = self;

//因为UI给的设计图示按照667* 375的屏幕给的，f如果你们的UI小姐姐给的设计图是按照iPhone5s的尺寸设计的，分别是568.320.


//本地的类
#import "RSMyNavigationViewController.h"
#import "UIScrollView+DREmptyDataSet.h"
#import "Nonetwork.h"
#import "UIColor+HexColor.h"
#import "RSBaseViewController.h"
#import "ZZQEmptyView.h"
#import "MJChiBaoZiFooter.h"
#import "MJChiBaoZiHeader.h"
#import "SCNavigationMenuView.h"
#import "UIView+Frame.h"
#import "UIBarButtonItem+Item.h"
#import "MyMD5.h"
#import "NetworkTool.h"
#import "RSViewProgressLine.h"
#import "RSUserModel.h"
#import "FSAES128.h"
#import "MXActionSheet.h"
#import "MiPushSDK.h"
#import "iCloudManager.h"
#import "ZZDocument.h"
#import "WSDatePickerView.h"
#import "RSWKOAmanagerViewController.h"
#import "UITextView+ZWPlaceHolder.h"
#import "JHSysAlertUtil.h"
#import "RSJumpVideoTool.h"
#import "UIViewController+YCPopover.h"
#import "HQPickerView.h"
#import "UIControl+QiEventInterval.h"

#define autoScaleW(width) [(AppDelegate *)[UIApplication sharedApplication].delegate autoScaleW:width]
#define autoScaleH(height) [(AppDelegate *)[UIApplication sharedApplication].delegate autoScaleH:height]

//第三方框架
//#import <UMCommon/MobClick.h>
#import <AFNetworking.h>
#import <MJRefresh.h>
#import <SDAutoLayout.h>
#import <IQKeyboardManager.h>
#import <Foundation/Foundation.h>
#import <SVProgressHUD.h>
#import <MJExtension.h>
#import <UIImageView+WebCache.h>
#import <JXTAlertManager/JXTAlertManagerHeader.h>
#import <TZImagePickerController/TZImagePickerController.h>
#import <FMDatabase.h>
#import <Masonry.h>
#import <SJVideoPlayer.h>
#import <KTVHTTPCache/KTVHTTPCache.h>

//web测试
//#define URL_POST_IOS @"http://183.251.102.156:48000/Yigo1.6"
//web正式
#define URL_POST_IOS @"http:/27.150.183.178:48000/Yigo1.6"

//测试账号：YBING 123456 liuxh 654321

//api测试服
//#define URL_NEWPOST_IOS @"http://183.251.102.156:48001"
//api正式
#define URL_NEWPOST_IOS @"http://121.204.136.234:48001"

//H5
#define URL_YIGO_IOS @""URL_POST_IOS"/services/MapWebService?wsdl"
#define URL_H5_IOS @""URL_POST_IOS"/Approval.html"
#define URL_H5FQ_IOS @""URL_POST_IOS"/Application.html"
#define URL_H5_CONTRACT_IOS @""URL_POST_IOS"/ContractDetails.html"


#define URL_YIGODATA_IOS(A,B,C) [NSString stringWithFormat:@ \
\
"<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:ns0=\"http:// \
\
webservice.mid.myerp.bokesoft.com\" xmlns:q0=\"http://schemas.xmlsoap.org/soap/encoding/\" \
\
xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">" \
\
"<soapenv:Body>" \
\
"<ns0:unsafeInvokeService>" \
\
"<sServiceName soapenv:encodingStyle=\"http://schemas.xmlsoap.org/soap/encoding/\" \
\
xsi:type=\"xsd:string\">%@</sServiceName>" \
\
"<args q0:arrayType=\"xsd:anyType[2]\" soapenv:encodingStyle=\"http://schemas.xmlsoap.org/soap/encoding/\" \
\
xsi:type=\"q0:Array\">" \
\
"<q0:string>%@</q0:string>" \
\
"<q0:string>%@</q0:string>" \
\
"</args>" \
\
"</ns0:unsafeInvokeService>" \
\
"</soapenv:Body>" \
\
"</soapenv:Envelope>",A,B,C] \
\

//FIXME:请求名
#define URL_LOGINWEBSERVICE @"LoginWebService"
//获取公告WorkFlowWebService
#define URL_WORKFLOWWEBSERVICE @"WorkFlowWebService"

//FIXME:方法名
//1. 取服务器公钥接口（主接口: LoginWebService方法名genpublickey）
#define URL_GENPUBLICKEY @"genpublickey"
//2. 获取用户角色接口（主接口: LoginWebService方法名:findrole）
#define URL_FINDROLE @"findrole"
//3．登录验证（主接口: LoginWebService方法名login）
#define URL_LOGIN @"login"
//4. 获取用户信息接口（主接口: LoginWebService方法名userinfo）
#define URL_USERINFO @"userinfo"
//5. 修改密码接口（主接口: LoginWebService方法名changepwd）
#define URL_CHANGPWD @"changepwd"
//6. 获取公告列表（主接口: WorkFlowWebService方法名notice）新版本没有使用这个接口了
//#define URL_NOTICE @"notice"
//7. 我的-待审批列表（主接口: WorkFlowWebService方法名tobeaudit）
//#define URL_TOBEAUDIT @"tobeaudit"
//15 字典加载（主接口: WorkFlowWebService方法名loadDictionary）
#define URL_LOADDICTIONNARY @"loadDictionary"
//8. 我的-审批列表（主接口: WorkFlowWebService方法名myaudit）
#define URL_MYAUDIT @"myaudit"
//9. 获取用户可用流程列表（主接口: WorkFlowWebService方法名flowlist）
#define URL_FLOWLIST @"flowlist"
//10.审批节点列表（主接口: WorkFlowWebService方法名auditflow）
#define URL_AUDITFLOW @"auditflow"
//11. 登出账户接口（主接口: LoginWebService方法名logout）
#define URL_LOGOUT @"logout"
//12. 加载通讯录 （主接口: WorkFlowWebService方法名loadMailList）
#define URL_LOADMAILLIST @"loadMailList"
//判断用户名是否可用
#define URL_VALIDUSERCODE @"validUserCode"
//注册接口
#define URL_REGISTERUSER @"registeUser"
//24．解控单列表（主接口: WorkFlowWebService方法名liftlist）
#define URL_LIFTLIST @"liftlist"
//25 解控单库存引入（主接口: WorkFlowWebService方法名stock）
#define URL_STOCK @"stock"
//26．    新增保存解控单（主接口: WorkFlowWebService方法名liftsave）
#define URL_LIFTSAVE @"liftsave"
//27．    修改保存解控单（主接口: WorkFlowWebService方法名liftupdate）
#define URL_LIFTUPDATE @"liftupdate"
//28．    确认/取消确认解控单（主接口: WorkFlowWebService方法名liftstate）
#define URL_LIFTSTATE @"liftstate"
//29．    删除解控单（主接口: WorkFlowWebService方法名liftdelete） 1
#define URL_LIFTDELETE @"liftdelete"
//30．    加载解控单（主接口: WorkFlowWebService方法名liftload）
#define URL_LIFTLOAD @"liftload"
//注册的参数
#define URL_YIGODATA_REGISTEUSER(A,B,C) [NSString stringWithFormat:@"{ data:{userCode:'%@',password:'%@',userName:'小%@'}}",A,B,C]
//第一种参数类型{ ukey:'U_SA_BCASX0136' }
#define URL_YIGODATA_PUBLICKKEY(A) [NSString stringWithFormat:@"{ ukey:'%@' }",A]
//{ data:{userCode:'liuxh'} } 第二种参数
#define URL_YIGODATA_USERCODE(A) [NSString stringWithFormat:@"{ data:{userCode:'%@'} }",A]
//{key:'Ua_SA_BCAaS2X01As36Ss',data:''} 第三种参数
#define URL_YIGODATA_LOGIN(A,B) [NSString stringWithFormat:@"{ ukey:'%@',data:'%@'}",A,B];
//{ appLoginToken:'03995d3cc76b48dbb25b7a3eb24b68e2'}第四种参数
#define URL_YIGODATA_APPLOGINTOKEN(A) [NSString stringWithFormat:@"{ appLoginToken:'%@'}",A];
//{appLoginToken:'e8e58926517e45f1aeafcca6d8c2963f',data: {pwd:'e10adc3949ba59abbe56e057f20f883e2',newPwd:'e10adc3949ba59abbe56e057f20f883e}}第五种参数
#define URL_YIGODATA_PASSWORD(A,B) [NSString stringWithFormat:@"{pwd:'%@',newPwd:'%@'}",A,B]
#define URL_YIGODATA_CHANGPWD(A,B) [NSString stringWithFormat:@"{appLoginToken:'%@',data:'%@'}",A,B]
//{appLoginToken:'e8e58926517e45f1aeafcca6d8c2963f',data: {pageNum:1,pageSize:5 }}第六种参数
#define URL_YIGODATA_DATA(A,B) [NSString stringWithFormat:@"{pageNum:%@,pageSize:%@ }",A,B]
#define URL_YIGODATA_NOTICE(A,B) [NSString stringWithFormat:@"{appLoginToken:'%@',data:'%@'}",A,B]
//{appLoginToken:'e8e58926517e45f1aeafcca6d8c2963f',data:{pageNum:1,pageSize:5,workFlowType:4, billKey: ‘’} }第七种参数
#define URL_YIGODDATA_FLOWLIST(A,B,C,D) [NSString stringWithFormat:@"{pageNum:'%@',pageSize:'%@',workFlowType:'%@', billKey:'%@'}",A,B,C,D]
//{appLoginToken:'e8e58926517e45f1aeafcca6d8c2963f',data: '{billId:29736563}'}第八种
#define URL_YIGODATA_AUDITFLOW(A) [NSString stringWithFormat:@"{billId:%@}",A]
//第九种{workFlowType:1}
#define URL_YIGODATA_WORKFLOWTYPE(A) [NSString stringWithFormat:@"{workFlowType:%@}",A]
//第10中参数解控单列表
#define URL_YIGODATA_LIFTLIST(A,B,C,D,E,F) [NSString stringWithFormat:@"{pageNum:'%@',pageSize:'%@',dateFrom:'%@', dateTo:'%@',deaName:'%@',type:'%@'}",A,B,C,D,E,F]
//第11种参数字典
#define URL_YIGODATA_DICTIONARY(A) [NSString stringWithFormat:@"{dealer:%@}",A]

#define URL_YIGODATA_DICTIONWAREHOUSEARY(A) [NSString stringWithFormat:@"{warehouse:%@}",A]

#define URL_YIGODATA_DICTIONSTOREAREAARY(A) [NSString stringWithFormat:@"{storeArea:%@}",A]

#define URL_YIGODATA_FEE(A) [NSString stringWithFormat:@"{fee:%@}",A]
//第12种参数解控单库存引入
#define URL_YIGODATA_STOCK(A,B,C,D,E,F) [NSString stringWithFormat:@"{pageNum:'%@',pageSize:'%@',mtlName:'%@', blockNo:'%@',deaId:'%@',type:'%@'}",A,B,C,D,E,F]

#define URL_YIGODATA_SLSTOCK(A,B,C,D,E,F,G,H) [NSString stringWithFormat:@"{pageNum:'%@',pageSize:'%@',mtlName:'%@', blockNo:'%@',deaId:'%@',type:'%@',whsId:'%@',storeAreaId:'%@'}",A,B,C,D,E,F,G,H]

#define URL_BANNER_IOS @""URL_NEWPOST_IOS"/api/banner/get"
#define URL_NEWBANNER_IOS(A,B) [NSString stringWithFormat:@"{pageNum:%d,pageSize:%d,filter:{location:'app_index'}}",A,B]
#define URL_NOTICE_IOS @""URL_NEWPOST_IOS"/api/notice/get"
#define URL_NEWNOTICE_IOS(A,B) [NSString stringWithFormat:@"{pageNum:%ld,pageSize:%d,filter:{noticeType:''}}",A,B]
#define URL_INFORMATION_IOS @""URL_NEWPOST_IOS"/api/information/get"
#define URL_NEWINFORMATION_IOS(A,B) [NSString stringWithFormat:@"{pageNum:%d,pageSize:%d,filter:{infoType:'海西资讯'}}",A,B]
#define URL_SYS_FILES_IOS @""URL_NEWPOST_IOS"/api/sys_files/get"
#define URL_NEWSYS_FILES_IOS(A,B,C,D) [NSString stringWithFormat:@"{pageNum:%d,pageSize:%d,filter:{fileTypeId:%ld,fileName:'%@'}}",A,B,C,D]
#define URL_SYS_FILES_TYPE_IOS @""URL_NEWPOST_IOS"/api/sys_files_type/get"
//获取
#define URL_DIARY_IOS @""URL_NEWPOST_IOS"/api/diary/get"
#define URL_NEWDIARY_IOS(A,B) [NSString stringWithFormat:@"{pageNum:%ld,pageSize:%d,filter:null}",A,B]
//新增
#define URL_DIARY_ADD_IOS @""URL_NEWPOST_IOS"/api/diary/add"
//删除
#define URL_DIARY_DELETE_IOS @""URL_NEWPOST_IOS"/api/diary/delete"
#define URL_DIARY_NEWDELETE_IOS(A) [NSString stringWithFormat:@"{id:%ld}",A]
//获取类别详情
#define URL_DIARY_GET_DTL_IOS @""URL_NEWPOST_IOS"/api/diary/get_dtl"
#define URL_DIARY_NEWGET_DTL_IOS(A) [NSString stringWithFormat:@"{id:%ld}",A]
//修改
#define URL_DIARY_UPDATE_IOS @""URL_NEWPOST_IOS"/api/diary/update"
//线上培训视频接口视频控制器
/// api / video / get
#define URL_VIDEO_IOS @""URL_NEWPOST_IOS"/api/video/get"
#define URL_NEWVIDEO_IOS(A,B,C,D) [NSString stringWithFormat:@"{pageNum:%ld,pageSize:%d,filter:{videoTypeId:%ld,videoTitle:'%@'}}",A,B,C,D]
//视频类型接口视频类型控制器
#define URL_VIDEOTYPE_IOS @""URL_NEWPOST_IOS"/api/video_type/get"
//推荐视频 / api / video / get / recommend
#define URL_VIDEORECOMMEND_IOS @""URL_NEWPOST_IOS"/api/video/get/recommend"
#define URL_NEWRECOMMEND_IOS(A,B,C,D,E) [NSString stringWithFormat:@"{pageNum:%ld,pageSize:%d,filter:{videoId:%ld,videoTypeId:%ld,videoTitle:'%@'}}",A,B,C,D,E]
//获取合同预警信息
#define URL_WARN_IOS @""URL_NEWPOST_IOS"/api/contract/warn"
//获取合同列表
#define URL_CONTRACT_LIST_IOS @""URL_NEWPOST_IOS"/api/contract/list"
//获取荒料出入库信息
#define URL_BMSTOCK_IOS @""URL_NEWPOST_IOS"/api/report/bmstock"
//获取大板出入库信息
#define URL_SLSTOCK_IOS @""URL_NEWPOST_IOS"/api/report/slstock"
//获取招商总账信息
#define URL_LEDGER_IOS @""URL_NEWPOST_IOS"/api/report/ledger"
//获取招商租赁情况
#define URL_LEASE_IOS @""URL_NEWPOST_IOS"/api/report/lease"
//获取园区费用应收余额列表
#define URL_MARKET_FEE_IOS @""URL_NEWPOST_IOS"/api/bill/market_fee"
//获取商户费用应收余额列表
#define URL_DEALER_FEE_IOS @""URL_NEWPOST_IOS"/api/bill/dealer_fee"
//获取商户费用应收明细
#define URL_DEALER_DTL_IOS @""URL_NEWPOST_IOS"/api/bill/dealer_fee_dtl"
//获取园区收款明细列表
#define URL_PAY_MARKET_IOS @""URL_NEWPOST_IOS"/api/bill/pay_market_fee"
//获取园区应收明细列表
#define URL_MARKET_DTL_IOS @""URL_NEWPOST_IOS"/api/bill/market_fee_dtl"
//获取当前用户未读公告总条数
#define URL_UNREAD_IOS @""URL_NEWPOST_IOS"/api/notice/get/unread/count"
//标记某条公告为已读
#define URL_READ_IOS @""URL_NEWPOST_IOS"/api/notice/read"
//标记所有公告为已读
#define URL_ALLREAD_IOS @""URL_NEWPOST_IOS"/api/notice/read/all"
